/*This code is public domain but you buy me a beer if you use this and we meet
  someday (Beerware license).
  4 digit 7 segment display:
  http://www.sparkfun.com/products/9483
  Datasheet:
  http://www.sparkfun.com/datasheets/Components/LED/7-Segment/YSD-439AR6B-35.pdf
  This is an example of how to drive a 7 segment LED display from an ATmega
  without the use of current limiting resistors. This technique is very common
  but requires some knowledge of electronics - you do run the risk of dumping
  too much current through the segments and burning out parts of the display.
  If you use the stock code you should be ok, but be careful editing the
  brightness values.
  This code should work with all colors (red, blue, yellow, green) but the
  brightness will vary from one color to the next because the forward voltage
  drop of each color is different. This code was written and calibrated for the
  red color.
  This code will work with most Arduinos but you may want to re-route some of
  the pins.
  7 segments
  4 digits
  1 colon
  =
  12 pins required for full control
*/

//Display brightness
//Each digit is on for a certain amount of microseconds
//Then it is off until we have reached a total of 20ms for the function call
//Let's assume each digit is on for 1000us
//Each digit is on for 1ms, there are 4 digits, so the display is off for 16ms.
//That's a ratio of 1ms to 16ms or 6.25% on time (PWM).
//Let's define a variable called brightness that varies from:
//5000 blindingly bright (15.7mA current draw per digit)
//2000 shockingly bright (11.4mA current draw per digit)
//1000 pretty bright (5.9mA)
//500 normal (3mA)
//200 dim but readable (1.4mA)
//50 dim but readable (0.56mA)
//5 dim but readable (0.31mA)
//1 dim but readable in dark (0.28mA)